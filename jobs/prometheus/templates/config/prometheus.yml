global:
  <% if_p('prometheus.scrape_interval') do |scrape_interval| %>
  # How frequently to scrape targets by default.
  scrape_interval: <%= scrape_interval %>
  <% end %>

  <% if_p('prometheus.scrape_timeout') do |scrape_timeout| %>
  # How long until a scrape request times out.
  scrape_timeout: <%= scrape_timeout %>
  <% end %>

  <% if_p('prometheus.evaluation_interval') do |evaluation_interval| %>
  # How frequently to evaluate rules by default.
  evaluation_interval: <%= evaluation_interval %>
  <% end %>

  # Attach these labels to any time series or alerts when communicating with
  # external systems (federation, remote storage, Alertmanager).
  external_labels: <%= p('prometheus.external_labels', {}).to_json %>

# Rule files specifies a list of files from which rules are read.
rule_files: <%= p('prometheus.rule_files', []).push('/var/vcap/jobs/prometheus/config/custom.rules').to_json %>

# A list of scrape configurations.
scrape_configs: <%= p('prometheus.scrape_configs', []).to_json %>

# Alerting specifies settings related to the Alertmanager.
alerting: <%= p('prometheus.alerting', {}).to_json %>

<%
  if_p('prometheus.remote_write') do |remote_write|
    rem_write = remote_write.dup
  else
    rem_write = Array.new
  end

  rem_read = Array.new
  if_p('prometheus.remote_read') do |remote_read|
    rem_read = remote_read.dup
  else
    rem_read = Array.new
  end

  if_link('influxdb') do |influxdb_link|
    influxdb_host     = influxdb_link.instances.first.address
    influxdb_database = influxdb_link.p("influxdb.database")
    influxdb_username = influxdb_link.p("influxdb.user")
    influxdb_password = influxdb_link.p("influxdb.password")
    influxdb_port     = influxdb_link.p("influxdb.http.port")

    influxdb_timeout  = p('influxdb_timeout')

    rem_write << {
      :url            => "https://#{influxdb_host}:#{influxdb_port}/api/v1/prom/write?db=#{influxdb_database}",
      :tls_config     => {:ca_file => "/var/vcap/jobs/prometheus/config/influxdb_ca_cert.pem"},
      :basic_auth     => {:username => influxdb_username, :password => influxdb_password},
      :remote_timeout => influxdb_timeout,
    }

    rem_read << {
      :url            => "https://#{influxdb_host}:#{influxdb_port}/api/v1/prom/read?db=#{influxdb_database}",
      :tls_config     => {:ca_file => "/var/vcap/jobs/prometheus/config/influxdb_ca_cert.pem"},
      :basic_auth     => {:username => influxdb_username, :password => influxdb_password},
      :remote_timeout => influxdb_timeout,
    }
  end
%>

# Settings related to the experimental remote write feature.
remote_write: <%= rem_write.to_json %>

# Settings related to the experimental remote read feature.
remote_read: <%= rem_read.to_json %>
